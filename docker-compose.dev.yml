version: '3.8'

services:
  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DB_HOST: timescaledb
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: dealbot
      NODE_ENV: development
    depends_on:
      timescaledb:
        condition: service_healthy
    volumes:
      - ./backend/api:/app
      - /app/node_modules
    command: npm run start:dev
    networks:
      - app-network

  ingestor:
    build:
      context: ./backend/ingestor
      dockerfile: Dockerfile
    volumes:
      - ./packages:/usr/src/app/packages
      - /usr/src/app/packages/ingestor/node_modules
      - /usr/src/app/packages/shared/node_modules
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@timescaledb:5432/dealbot
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      AWS_S3_BUCKET: test-bucket
      AWS_S3_KEY: test-key
    depends_on:
      - timescaledb
    networks:
      - app-network

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dealbot
      TIMESCALEDB_TELEMETRY: off
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # sonarqube:
  #   image: sonarqube:community
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     SONAR_JDBC_URL: jdbc:postgresql://timescaledb:5432/sonarqube
  #     SONAR_JDBC_USERNAME: postgres
  #     SONAR_JDBC_PASSWORD: postgres
  #   volumes:
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_logs:/opt/sonarqube/logs
  #   depends_on:
  #     timescaledb:
  #       condition: service_healthy
  #   networks:
  #     - app-network

volumes:
  timescaledb_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  app-network:
    driver: bridge 