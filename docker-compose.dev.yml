version: '3.8'

services:
  ingestor:
    build:
      context: ./backend/ingestor
      dockerfile: Dockerfile
    volumes:
      - ./backend/ingestor:/usr/src/app
      - /usr/src/app/dist
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=dealbot
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=test-bucket
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_S3_FORCE_PATH_STYLE=true
    depends_on:
      - timescaledb
      - localstack
    networks:
      - app-network

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dealbot
      - TIMESCALEDB_TELEMETRY=off
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - PERSISTENCE=1
      - DATA_DIR=/var/lib/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - LEGACY_PERSISTENCE=1
      - LEGACY_DIRECTORIES=1
    volumes:
      - ./localstack_data:/var/lib/localstack/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  timescaledb_data:
  localstack_data:
    name: islamicfinanceguru_localstack_data
    driver: local

networks:
  app-network:
    driver: bridge 