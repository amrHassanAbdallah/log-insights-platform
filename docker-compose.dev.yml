version: '3.8'

services:
  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    env_file:
      - ./backend/api/.env
    environment:
      - NODE_ENV=development
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=dealbot
    depends_on:
      timescaledb:
        condition: service_healthy
    volumes:
      - ./backend/api:/app
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000/graphql
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - app-network

  ingestor:
    build:
      context: ./backend/ingestor
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=dealbot
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=test-bucket
      - AWS_S3_KEY=test-key
      - AWS_ENDPOINT=http://localstack:4566
    command: node dist/main watch -b test-bucket -i 600
    depends_on:
      timescaledb:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - app-network

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dealbot
      TIMESCALEDB_TELEMETRY: off
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - PERSISTENCE=1
      - DATA_DIR=/var/lib/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - LEGACY_PERSISTENCE=1
      - LEGACY_DIRECTORIES=1
    volumes:
      - ./localstack_data:/var/lib/localstack/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  timescaledb_data:
  localstack_data:

networks:
  app-network:
    driver: bridge 